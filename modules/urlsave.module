#!/usr/bin/env bash

[[ -d $HOME/html ]] || mkdir -p "$HOME/html"
touch "$HOME/html/links.html"
touch "$mydir/data/urls.txt"

create_header() {
	printf '<!DOCTYPE html><head><meta charset="UTF-8"><title>links...</title></head><body><small>\n' > "$1"
}

_urlsave() {
	if [[ -e $mydir/data/urls.${config[server]}.db ]]; then source "$mydir/data/urls.${config[server]}.db"
	else declare -A urls=()
	fi

	local ticks chan=${line[2]} i title change text
	text="${line[*]:3}"
	read -ra text <<<"${text/:/}"
	#local text="${line[*]:3}"; text=( ${text/:/} )

	read -r ticks < <(date -u +%s)
	local change=0
	for i in "${text[@]}"; do
		[[ ${i,,} =~ ^[a-z]{3,}:// ]] || continue

		if ((${#urls[$i]})); then
			(( $(( $(date +%s) - ${urls[$i]} )) < ${urlsave[timeout]:-300} )) && continue
		fi

		read -r title < <(get_url_title "$i")
		((${#title})) || title='ENOTITLE'
		urls[$i]=$ticks
		privmsg "$chan" "^ ${title}" >&3
		grep -q "$i" "$mydir/data/urls.txt" && continue
		printf '%s %s %s %s\n' "${chan/#/}" "${config[server]}" "$i" "$title" >> "$mydir/data/urls.txt"
		change=1
	done
	((change)) || return
	declare -p urls > "$mydir/data/urls.${config[server]}.db"
	{
	printf '<!DOCTYPE html><head><meta charset="UTF-8"><title>links...</title></head><body>\n'
	while read -r chan server link title; do
		read -r chan < <(md5 <<<"$chan")
		read -r server < <(md5 <<<"$server")
		[[ -f $HOME/html/${chan}.html ]] || create_header "$HOME/html/${chan}.html"
		[[ -f $HOME/html/${server}.html ]] || create_header "$HOME/html/${server}.html"

		printf '<p><a href="%s">%s</a><br /><small><a href="%s.html">%s</a>@<a href="%s.html">%s</a></small></p>\n' \
			"$link" \
			"$title" \
			"$chan" "$chan" \
			"$server" "$server" | tee -a "$HOME/html/${chan}.html" "$HOME/html/${server}.html"
	done < "$mydir/data/urls.txt"
	printf '</body></html>'
	} > "$HOME/html/links.html"
}
_urlsave
