#!/usr/bin/env bash

triggerbot() {
	local i trigger t oline _hint
	[[ "${line[3]/:/}" =~ ^${config[trigger]} ]] || return
	[[ ${config[wait_identity],,:-y} = @(1|y) && ${config[nick]} = "$mynick" ]] || return
	[[ -e "${mydir}/data/${config[server]}/triggers" ]] || mkdir -p "${mydir}/data/${config[server]}/triggers"
	if [[ ! -e "${mydir}/data/${config[server]}/triggers/${line[2]}" ]]; then
		declare triggers_enabled=(${triggers[default]:-help})
		declare -p triggers_enabled > "${mydir}/data/${config[server]}/triggers/${line[2]}"
	fi

	source "${mydir}/data/${config[server]}/triggers/${line[2]}"
	oline=(${line[@]})

	line=("${line[0]}" "${line[1]}" "${line[2]}" ":${nick}" "${line[3]/:/}" ${line[@]:4})

	## define trigger
	trigger="${line[4]/${config[trigger]}/}"
	if ((${#trigger})); then
		is_flood "$mask" "trigger" 3 7 && return

		if _hint=( $(is_option "${trigger}" ${triggers_enabled[@]}) ); then
			_log "trigger: ${nick/:/} makes me run '$_hint' (${line[*]:4})" info
			[[ -e "${mydir}/triggers/${_hint}.trigger" ]] && source "${mydir}/triggers/${_hint}.trigger"

		elif ((${#_hint[@]})); then
			_hint="${_hint[*]}"
			printf >&3 'PRIVMSG %s :%s: Ambiguous command, did you mean *%s* ?\n' "${line[2]}" "${nick}" "${_hint// /*, *}"
		fi
	fi

	## set line to what it was
	line=(${oline[@]})
}

triggerbot "${line[@]:4}"
