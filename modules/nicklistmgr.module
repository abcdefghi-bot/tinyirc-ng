#!/usr/bin/env bash

nicklistmgr() {
	local chan=${line[2]} action=${line[1]} nicklist_dir="$mydir/tmp/${config[server]}/nicklist" chan nicklist
	[[ $chan = :\#* ]] && chan="${chan/:/}"
	[[ -d $nicklist_dir ]] || mkdir -p "$nicklist_dir"
	local time; read -r time < <(date -u +%s)

	case "$action" in
		MODE)
			[[ -e $nicklist_dir/$chan ]] || return
			source "$nicklist_dir/$chan"
			local chars="${line[3]}" item_count=3 char sign i
			for ((i=0;i<${#chars};i++)); do
				case "${chars:$i:1}" in
					\+|\-) sign="${chars:$i:1}";;
					c|i|m|n|p|s|t|C|M|R)
						continue
					;;

					b|j|k|l|E|I|J)
						((item_count++));
						continue
					;;

					o|h|v)
						((item_count++)); nick="${line[$item_count]}"
						case "${chars:$i:1}" in
							o) # (de)op
								if [[ $sign = \+ ]]; then	oplist["$nick"]=$time
								else unset -v oplist["$nick"]; fi
							;;
							h) # (de)halfop
								if [[ $sign = \+ ]]; then holist["$nick"]=$time
								else unset -v holist["$nick"]; fi
							;;
							v) # (de)voice
								if [[ $sign = \+ ]]; then volist["$nick"]=$time
								else unset -v volist["$nick"]; fi
							;;
						esac
					;;
				esac
			done
	;;
	JOIN)
		if [[ $nick = "$mynick" ]]; then
			[[ -e $nicklist_dir/$chan ]] && rm "$nicklist_dir/$chan"
			declare -A nicklist=() oplist=() holist=() volist=()
		else
			[[ -e $nicklist_dir/$chan ]] || return
			source "$nicklist_dir/$chan"
			nicklist["$nick"]=$time
		fi
	;;
	KICK)
		[[ -e $nicklist_dir/$chan ]] || return
		local nick="${line[3]}"
		[[ $nick = "$mynick" ]] && { rm "$nicklist_dir/$chan"; return; }
		source "$nicklist_dir/$chan"
		unset -v nicklist["$nick"] oplist["$nick"] holist["$nick"] volist["$nick"]
	;;

	PART)
		[[ -e $nicklist_dir/$chan ]] || return

		## the bot parted the chan, set nicklist as empty
		if [[ $nick = "$mynick" ]]; then
			rm "$nicklist_dir/$chan"
			return
		fi
		source "$nicklist_dir/$chan"
		unset -v nicklist["$nick"] oplist["$nick"] holist["$nick"] volist["$nick"]
	;;
	QUIT|NICK)
		local fp

		for fp in "$nicklist_dir"/*; do
			[[ -e $fp ]] || break
			chan="${fp##*/}"
			source "$fp"

			if [[ ${line[1]} = NICK ]]; then
				local newnick="${line[2]}"; newnick="${newnick/:/}"
				nicklist["$newnick"]="${nicklist[$nick]}"
				[[ ${oplist[$nick]} ]] && oplist["$newnick"]="${oplist[$nick]}"
				[[ ${holist[$nick]} ]] && holist["$newnick"]="${holist[$nick]}"
				[[ ${volist[$nick]} ]] && volist["$newnick"]="${volist[$nick]}"
			fi

			unset -v nicklist["$nick"] oplist["$nick"] holist["$nick"] volist["$nick"]
			declare -p nicklist oplist holist volist > "$fp"
		done
		return
	;;
	353)
		read -r _ _ _ _ chan _ <<<"$REPLY"
		[[ -e $nicklist_dir/$chan ]] || return
		source "$nicklist_dir/$chan"

		nicks=(${REPLY##*:})
		for nick in "${nicks[@]}"; do
			onick="$nick"
			nick="${nick/@/}"; nick="${nick/+/}"; nick="${nick/%/}";
			case "$onick" in
				\+*)	volist["$nick"]=$time;;
				\%*)	holist["$nick"]=$time;;
				\@*)	oplist["$nick"]=$time;;
			esac
			nicklist["$nick"]=$time
		done
	;;
	esac
	[[ $nicklist_dir && $chan ]] && declare -p nicklist oplist holist volist > "$nicklist_dir/$chan"
}

nicklistmgr
